version: '3'
services:
  backend:
    # Uncomment the next line to use a non-root user for all processes. You can also
    # simply use the "remoteUser" property in devcontainer.json if you just want VS Code
    # and its sub-processes (terminals, tasks, debugging) to execute as the user. On Linux,
    # you may need to update USER_UID and USER_GID in .devcontainer/Dockerfile to match your
    # user if not 1000. See https://aka.ms/vscode-remote/containers/non-root for details.
    # user: vscode
    build: 
      context: .
      dockerfile: Dockerfile
    
    image: devcontainer_webmap_webform_backend:dev

    volumes:
      # Update this to wherever you want VS Code to mount the folder of your project
      - ..:/app:cached
      - node_modules:/app/Target/hiringtrackingsite-angular/node_modules/
      - /var/run/docker.sock:/var/run/docker.sock # forward host Docker socket to access docker CLI
      - docker-config:/root/.docker/ # necessary to store the docker login credentials in /root/.docker/.config.json
    networks:
      dev-net:
    container_name: webmap_webform_backend.dev
    command: /bin/sh -c "dotnet restore --disable-parallel && sleep infinity"
    environment:
      - SPA_DEV_SERVER_URI=http://webmap-webforms:3000/
      - ASPNETCORE_ENVIRONMENT=Development
      - DEVCONTAINER=container
      - ASPNETCORE_URLS=https://+:5000;http://+:5001
      - REPO_ROOT_DIR=/app
    ports:
      - "5000:5000"
      - "5001:5001"
    depends_on:
      - frontend
      - db
    working_dir: /app/Target

  frontend:   
    image: node:12

    volumes:
      # Update this to wherever you want VS Code to mount the folder of your project
      - ../Target/hiringtrackingsite-angular:/app/Target/hiringtrackingsite-angular:cached
      - node_modules:/app/Target/hiringtrackingsite-angular/node_modules/
    ports:
      - "4200:4200"
    networks:
      dev-net:
    container_name: webmap_webform_frontend.dev
    working_dir: /app/Target/hiringtrackingsite-angular/
    command: /bin/sh -c "bash startSpaDevServer.sh"
    environment:
      - NODE_ENV=development
      - DEVCONTAINER=container
      # necessary for to webpack hot module replacement to pick up watched source changes done outside the docker container
      # https://github.com/paulmillr/chokidar#performance
      #- CHOKIDAR_USEPOLLING=true
      #- CHOKIDAR_INTERVAL=1000

  db:
    build: 
      context: .
      dockerfile: DockerfileDB
    networks:
      dev-net:
    container_name: webmap_webform_db.dev
    image: devcontainer_db:dev

  
networks:
  dev-net:
    driver: bridge
volumes:
  node_modules:
  docker-config:
